// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var channel, chatlog, connect, printMessage, sendMessage, socket;
    $('input').focus();
    channel = new goog.appengine.Channel(window.chatByIpToken);
    socket = channel.open();
    connect = function() {
      channel = new goog.appengine.Channel(window.chatByIpToken);
      return socket = channel.open();
    };
    socket.onerror = function() {
      return connect();
    };
    socket.onclose = function() {
      return connect();
    };
    sendMessage = function(msg) {
      return $.ajax({
        url: "/message?message=",
        type: "POST",
        data: JSON.stringify({
          message: msg
        })
      }).done(function(response) {
        console.log(response);
        return $("input").val('');
      });
    };
    printMessage = function(data) {
      var message;
      message = urlize(data.message, {
        target: '_blank'
      });
      return $(".messages").append("<table class='message-line'>        <tr>          <td class='name'>" + data.name + ": </td>          <td class='message'>" + message + "</td>        </tr>      </table>");
    };
    $("form").submit(function(e) {
      e.preventDefault();
      return sendMessage($('input').val());
    });
    socket.onopen = function() {
      var connected;
      connected = true;
      return sendMessage("connected");
    };
    chatlog = JSON.parse(localStorage['chatlog'] || '[]');
    return socket.onmessage = function(msg) {
      var data;
      data = JSON.parse(msg.data);
      if (data.signOn || data.signOff) {
        return $('.num-people').text(data.numPeople);
      } else {
        localStorage['chatlog'] = JSON.stringify(chatlog);
        return printMessage(data);
      }
    };
  });

}).call(this);
